@import 'src/scss/globals';

$headerHeight: 120px;
$darkModeBlack: rgb(15,15,25);
$darkModeTextWhite: rgb(250,250,250);

$darkModeNeonAccent--red: rgb(255,42,0);
$darkModeBlackOffset--red: rgb(90,75,75);
$darkModeNeonAccent--green: rgb(0,255,42);
$darkModeBlackOffset--green: rgb(75,90,75);
$darkModeNeonAccent--blue: rgb(0,200,255);
$darkModeBlackOffset--blue: rgb(75,75,90);
$darkModeNeonAccent--orange: rgb(255,126,0); // bmw gauge orange
$darkModeBlackOffset--orange: rgb(80,70,60);
$darkModeBlackOffset: $darkModeBlackOffset--orange;
$darkModeNeonAccent: $darkModeNeonAccent--orange;

// TODO add settings to change these colors

.hue {
  display: grid;
  grid-template-columns: 100%;
  grid-template-rows: $headerHeight calc(100vh - #{$headerHeight});
  height: 100vh;
  width: 100vw;

  &__header {
    grid-area: 1 / 1 / 2 / 2;
    line-height: 1.4;
  }

  &__title {
    @include smallHeader;
    align-items: center;
    display: flex;
    justify-content: center;
    margin-top: 20px;
    text-align: center;
  }

  &__darkModeCheckbox {
    align-items: center;
    display: flex;
    justify-content: center;
  }

  &__links {
    align-items: center;
    background: rgb(240,240,240);
    border-radius: 8px;
    display: flex;
    justify-content: space-around;
    margin: 20px auto;
    max-width: 500px;
    padding: 5px;

    &__link {
      color: rgb(100,100,100);
      cursor: pointer;
      text-decoration: none;

      &:hover,
      &--selected {
        text-decoration: underline;
      }

      &--selected {
        color: black;
      }
    }
  }

  &__controller {
    border: 1px solid rgb(200,200,200);
    border-radius: 6px;
    display: grid;
    grid-area: 2 / 1 / 3 / 2;
    // TODO max width on list col?
    grid-template-columns: 1fr 2fr;
    grid-template-rows: auto;
    margin: 10px 10vw;
    max-height: 100%;
    max-width: 1000px;
    padding: 20px;
  }

  &--darkMode {
    background: $darkModeBlack;
    color: $darkModeTextWhite;

    & .hue__links {
      background: $darkModeBlackOffset;

      &__link {
        color: $darkModeTextWhite;
  
        &--selected {
          color: white;
        }
      }
    }

    & .hue__controller {
      border: 1px solid $darkModeNeonAccent;
    }

    & .hueGroups {
      &__listItem {
        background: $darkModeBlack;
        border: 1px solid $darkModeNeonAccent;

        &:hover,
        &--selected {
          background: $darkModeBlackOffset;
        }
      }
    }

    & .beats__songSearchInput,
    & .beats__songSearchInput::placeholder {
      color: $darkModeTextWhite;
    }

    & .beats__buttons {
      border: 1px solid $darkModeNeonAccent;
      border-radius: 5px; // wraps buttons that have 4px border radius
    }
  }
}

// TODO move into own file
.hueGroups {
  margin: 0 auto;

  &__list,
  &__detail {
    overflow-y: auto;
  }

  &__list {
    grid-area: 1 / 1 / 2 / 2;
    margin: 0;

    &Item {
      // TODO make mixin (also in Light.scss)
      background: white;
      border: 1px solid rgb(200,200,200);
      border-radius: 8px;
      cursor: pointer;
      margin: 3px;
      padding: 10px;
      text-align: center;

      &:hover,
      &--selected {
        background: rgb(240,240,240);
      }
    }
  }

  &__detail {
    grid-area: 1 / 2 / 2 / 3;

    &__controller {
      border: 1px solid rgb(200,200,200);
      border-radius: 6px;
      margin: 4px;
      padding: 10px;
    }
  }
}

.beats {
  &__wrapper {
    align-items: center;
    display: flex;
    flex-direction: column;
    padding: 0 10px;
  }

  &__mainControls {
    display: flex;
    justify-content: space-between;
    margin: 8px 0;
    width: 100%;
  }

  &__buttons {
    border: 1px solid transparent;
  }

  &__basicHueControls {
    display: flex;
    justify-content: space-evenly;
    width: 100%;

    & > * {
      padding: 4px 10px;
    }
  }

  &__lights {
    display: flex;

    &--fullScreen {
      bottom: 10px;
      left: 10px;
      margin: 0;
      max-height: 100%;
      max-width: 100%;
      min-height: 0;
      min-width: 0;
      position: absolute;
      right: 10px;
      top: 10px;

      & .modal-content {
        display: flex;
        flex-direction: row;
        min-height: 100%;
      }

      // & .beatLight {
      //   @include forceWidth(50%); // TODO tim make this variable
      //   @include forceHeight(100%);
      //   border: 0;
      //   border-radius: 0;
      //   margin: 0;
      //   padding: 0;
      // }
    }
  }

  &__checkboxWrapper {
    display: flex;
  }

  &__checkbox {
    align-items: center;
    display: flex;
  }

  &__songSearchInput {
    margin-bottom: 8px !important;
  }
}

$BeatVisualizerBorderRadius: 8px;
.BeatVisualizer {
  background: rgb(220,220,220);
  border: 1px solid black;
  border-radius: $BeatVisualizerBorderRadius;
  box-shadow: inset 0px 8px 20px 0px rgba(0,0,0,0.35);
  min-width: 100%;
  overflow: hidden;

  &__preview {
    border-radius: $BeatVisualizerBorderRadius;
  }
}

.beatLight {
  $beatLightRadius: 50px;
  @include forceHeight($beatLightRadius);
  @include forceWidth($beatLightRadius);
  border: 1px solid black;
  border-radius: #{$beatLightRadius / 2};
}

.lightTracksSettings {
  display: grid;
  grid-template-columns: 1fr 150px;
  grid-template-rows: auto;
  width: 100%;

  &__tracks {
    margin-bottom: 10px;
    overflow: auto;

    & > * {
      padding: 5px;
    }
  }

  &__trackSettings {
    align-items: center;
    display: flex;
    grid-area: 1 / 1 / 2 / 2;
  }

  &__lightIdSelectors {
    margin-left: 10px;

    &__titleRow {
      align-items: center;
      display: flex;
      margin-bottom: 5px;

      & > *:first-child {
        margin-right: 20px;
      }
    }
  }

  &__lightIdButton {
    padding: 8px 16px;
  }

  &__input {
    max-width: 100px;
    text-align: center;
  }

  &__lightsInfo {
    grid-area: 1 / 2 / 2 / 3;
    margin-left: 8px;
    overflow-y: auto;

    & > * {
      text-align: center;
      padding: 6px;
    }

    &--details {
      font-style: italic;
    }

  }

  &--darkMode {
    color: $darkModeTextWhite;

    & .beatLight {
      border: 1px solid $darkModeNeonAccent;
    }

    & .lightTracksSettings__input {
      background: $darkModeBlack;
      border: 1px solid $darkModeNeonAccent;
      color: $darkModeTextWhite;
    }

    & :global(.dropdown-menu) {
      background: $darkModeBlackOffset;
      border: 1px solid $darkModeNeonAccent;

      & > :global(.dropdown-item) {
        color: $darkModeTextWhite;

        &:hover {
          color: black;
        }
      }
    }

    & :global(.list-group-item) {
      background: $darkModeBlack;
      border: 1px solid $darkModeNeonAccent;

      &:not(:first-child) {
        border-top: 0;
      }
    }

    & :global(.input-group-text) {
      background: $darkModeBlackOffset;
      border: 1px solid $darkModeNeonAccent;
      color: $darkModeTextWhite;
    }
  }
}
